# inference/infer_all.py
import os, sys, cv2
from PIL import Image
import numpy as np
import torchvision.transforms as T
import torch
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))
from models.mobilenetv2_deeplabv3 import get_model

def run_single(img_path, model, device, results_dir, input_size=(320,320)):
    transform = T.Compose([T.Resize(input_size), T.ToTensor(), T.Normalize(mean=[0.485,0.456,0.406], std=[0.229,0.224,0.225])])
    img = Image.open(img_path).convert("RGB")
    tensor = transform(img).unsqueeze(0).to(device)
    with torch.no_grad():
        out = model(tensor)
        pred = torch.sigmoid(out)[0,0].cpu().numpy()
        pred_bin = (pred > 0.5).astype('uint8')
    pred_bin = cv2.resize(pred_bin, img.size, interpolation=cv2.INTER_NEAREST)
    img_np = np.array(img)
    overlay = img_np.copy(); overlay[pred_bin==1] = [255,0,0]
    blended = cv2.addWeighted(img_np, 0.7, overlay, 0.3, 0)
    fname = os.path.splitext(os.path.basename(img_path))[0]
    Image.fromarray(blended).save(os.path.join(results_dir, fname + "_overlay.png"))
    cv2.imwrite(os.path.join(results_dir, fname + "_mask.png"), pred_bin*255)
    print("Saved:", fname)

if __name__ == "__main__":
    base_dir = r"C:\Folder\New folder\Sharon's_files\Sharon-s-Code\Teeth_Segmentation_Whitening"
    test_dir = os.path.join(base_dir, "data", "test", "img")
    model_path = os.path.join(base_dir, "checkpoints", "best_model.pth")
    results_dir = os.path.join(base_dir, "results")
    os.makedirs(results_dir, exist_ok=True)

    device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
    model = get_model(num_classes=1)
    model.load_state_dict(torch.load(model_path, map_location=device))
    model.to(device).eval()

    imgs = sorted([os.path.join(test_dir, f) for f in os.listdir(test_dir) if f.lower().endswith((".jpg",".jpeg",".png"))])
    for p in imgs:
        run_single(p, model, device, results_dir)
